{"version":3,"sources":["context/cognitiveTestContext/index.jsx","context/octDataContext/index.jsx","components/OctData/styles.jsx","services/colors.js","components/OctData/index.jsx","components/Results/styles.jsx","components/Results/index.jsx","components/CognitiveTest/styles.jsx","components/CognitiveTest/index.jsx","components/Navbar/styles.jsx","components/Navbar/index.jsx","components/Home/styles.jsx","components/Home/index.jsx","components/Footer/styles.jsx","components/Footer/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["CognitiveTestContext","React","createContext","CognitiveProvider","children","useReducer","state","newState","physician","patient","idNumber","sex","age","diagnosis","cognitiveTestA","scoreA","cognitiveTestB","scoreB","ocularDisease","octModel","cognitiveTest","setCognitiveTest","Provider","value","OctDataContext","OctProvider","peripapillary","od","os","macular_thickness","macular_volume","gcl_ipl","gcl_ipl_rnfl","octData","setOctData","Container","styled","div","Form","Break","PercentisCard","Percentis","background","Row","Box","colors","black","white","gray","green","yellow","orange","red","primary","percentisControle","var","p1","p5","p10","p25","p50","p75","p90","p95","p99","OctData","props","useContext","useState","peripOsPerc","setPeripOsPerc","peripOdPerc","setPeripOdPerc","totalMacularOdPerc","setTotalMacularOdPerc","totalMacularOsPerc","setTotalMacularOsPerc","macularVolOdPerc","setMacularVolOdPerc","macularVolOsPerc","setMacularVolOsPerc","gclIplOdPerc","setGclIplOdPerc","gclIplOsPerc","setGclIplOsPerc","gclIplRnflOdPerc","setGclIplRnflOdPerc","gclIplRnflOsPerc","setGclIplRnflOsPerc","handlePercentis","data","find","percent","arr","console","log","type","id","onChange","event","target","onInput","parseInt","to","Button","variant","color","href","path","component","Results","cognitiveTestData","CognitiveTest","history","className","FormControl","fullWidth","Select","renderValue","MenuItem","selected","Card","Navbar","end","Homepage","Subtitle","Home","Footerpage","StyledButton","Miniature","Footer","icon","faUser","size","faEye","faPollH","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ec51e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const CognitiveTestContext = React.createContext();\r\n\r\nexport const CognitiveProvider = ({ children }) => {\r\n  const testSchema = {\r\n    physician: \"\",\r\n    patient: \"\",\r\n    idNumber: \"\",\r\n    sex: \"\",\r\n    age: \"\",\r\n    diagnosis: \"\",\r\n    cognitiveTestA: \"\",\r\n    scoreA: \"\",\r\n    cognitiveTestB: \"\",\r\n    scoreB: \"\",\r\n    ocularDisease: \"\",\r\n    octModel: \"\",\r\n  };\r\n\r\n  const reducer = (state, newState) => ({ ...state, ...newState });\r\n  const [cognitiveTest, setCognitiveTest] = React.useReducer(\r\n    reducer,\r\n    testSchema\r\n  );\r\n\r\n  return (\r\n    <CognitiveTestContext.Provider\r\n      value={{\r\n        cognitiveTest,\r\n        setCognitiveTest,\r\n      }}\r\n    >\r\n      {children}\r\n    </CognitiveTestContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const OctDataContext = React.createContext();\r\n\r\nexport const OctProvider = ({ children }) => {\r\n  const octDataInitialState = {\r\n    peripapillary: {\r\n      od: \"\",\r\n      os: \"\",\r\n    },\r\n    macular_thickness: {\r\n      od: \"\",\r\n      os: \"\",\r\n    },\r\n    macular_volume: {\r\n      od: \"\",\r\n      os: \"\",\r\n    },\r\n    gcl_ipl: {\r\n      od: \"\",\r\n      os: \"\",\r\n    },\r\n    gcl_ipl_rnfl: {\r\n      od: \"\",\r\n      os: \"\",\r\n    },\r\n  };\r\n\r\n  const reducer = (state, newState) => ({ ...state, ...newState });\r\n  const [octData, setOctData] = React.useReducer(reducer, octDataInitialState);\r\n\r\n  return (\r\n    <OctDataContext.Provider\r\n      value={{\r\n        octData,\r\n        setOctData,\r\n      }}\r\n    >\r\n      {children}\r\n    </OctDataContext.Provider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  margin: 0 10%;\r\n\r\n  @media (max-width:768px){\r\n    margin 0px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 500px;\r\n`;\r\n\r\nexport const Break = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const PercentisCard = styled.div`\r\n  margin-left: 20px;\r\n  align-self: center;\r\n\r\n  td {\r\n    text-align: center;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const Percentis = styled.div`\r\n  width: 90px;\r\n  height: 20px;\r\n  background: ${({ background }) => background};\r\n  border: 1px solid #d8d8d8;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  margin-top: 10px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  input {\r\n    width: 60%;\r\n    margin-left: 15px;\r\n    padding: 10px;\r\n    border: 1px solid #d8d8d8;\r\n    border-radius: 5px;\r\n  }\r\n  input:focus {\r\n    outline-color: #3a86ff;\r\n  }\r\n`;\r\n","const colors = {\r\n  black: \"#000000\",\r\n  white: \"#ffffff\",\r\n  gray: \"#808080\",\r\n  green: \"#01fe01\",\r\n  yellow: \"#ffff00\",\r\n  orange: \"#fe7f01\",\r\n  red: \"#ff0000\",\r\n  primary: \"#05a0fe\",\r\n};\r\n\r\nexport default colors;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Box,\r\n  Break,\r\n  Row,\r\n  Percentis,\r\n  PercentisCard,\r\n} from \"./styles\";\r\nimport { defaultReducer } from \"../../reducers\";\r\nimport colors from \"../../services/colors\";\r\nimport { Route, Link, BrowserRouter } from \"react-router-dom\";\r\nimport { Results } from \"../../components\";\r\nimport { OctDataContext } from \"../../context/octDataContext\";\r\n\r\nconst percentisControle = [\r\n  {\r\n    var: \"peripapillary\",\r\n    p1: 72.9,\r\n    p5: 80.6,\r\n    p10: 84.7,\r\n    p25: 91.6,\r\n    p50: 99.3,\r\n    p75: 106.9,\r\n    p90: 113.8,\r\n    p95: 117.9,\r\n    p99: 125.7,\r\n  },\r\n  {\r\n    var: \"total_macular\",\r\n    p1: 242.9,\r\n    p5: 252.4,\r\n    p10: 257.4,\r\n    p25: 265.8,\r\n    p50: 275.1,\r\n    p75: 284.4,\r\n    p90: 292.8,\r\n    p95: 297.9,\r\n    p99: 307.3,\r\n  },\r\n  {\r\n    var: \"GCL/IPL\",\r\n    p1: 57.6,\r\n    p5: 62.2,\r\n    p10: 64.7,\r\n    p25: 68.8,\r\n    p50: 73.4,\r\n    p75: 77.9,\r\n    p90: 82.1,\r\n    p95: 84.5,\r\n    p99: 89.1,\r\n  },\r\n  {\r\n    var: \"GCL/IPL/RNFL\",\r\n    p1: 84.6,\r\n    p5: 89.3,\r\n    p10: 91.9,\r\n    p25: 96.1,\r\n    p50: 100.8,\r\n    p75: 105.4,\r\n    p90: 109.7,\r\n    p95: 112.2,\r\n    p99: 116.9,\r\n  },\r\n  {\r\n    var: \"macular_volume\",\r\n    p1: 7.2,\r\n    p5: 7.5,\r\n    p10: 7.6,\r\n    p25: 7.9,\r\n    p50: 8.2,\r\n    p75: 8.4,\r\n    p90: 8.7,\r\n    p95: 8.8,\r\n    p99: 9.1,\r\n  },\r\n];\r\n\r\nfunction OctData(props) {\r\n  const { octData, setOctData } = React.useContext(OctDataContext);\r\n  const [peripOsPerc, setPeripOsPerc] = React.useState();\r\n  const [peripOdPerc, setPeripOdPerc] = React.useState();\r\n  const [totalMacularOdPerc, setTotalMacularOdPerc] = React.useState();\r\n  const [totalMacularOsPerc, setTotalMacularOsPerc] = React.useState();\r\n  const [macularVolOdPerc, setMacularVolOdPerc] = React.useState();\r\n  const [macularVolOsPerc, setMacularVolOsPerc] = React.useState();\r\n  const [gclIplOdPerc, setGclIplOdPerc] = React.useState();\r\n  const [gclIplOsPerc, setGclIplOsPerc] = React.useState();\r\n  const [gclIplRnflOdPerc, setGclIplRnflOdPerc] = React.useState();\r\n  const [gclIplRnflOsPerc, setGclIplRnflOsPerc] = React.useState();\r\n\r\n  function handlePercentis(data, value) {\r\n    if (percentisControle.find((percent) => percent.var === data)) {\r\n      const arr = percentisControle.find((percent) => percent.var === data);\r\n\r\n      console.log(value);\r\n      if (value < arr.p1) {\r\n        return <Percentis background={colors.red}>{`< p1`}</Percentis>;\r\n      } else if (value >= arr.p1 && value <= arr.p5) {\r\n        return <Percentis background={colors.yellow}>p1-p5</Percentis>;\r\n      } else if (value >= arr.p5 && value <= arr.p10) {\r\n        return <Percentis background={colors.orange}>p5-p10</Percentis>;\r\n      } else if (value >= arr.p10 && value <= arr.p25) {\r\n        return <Percentis background={colors.green}>p10-p25</Percentis>;\r\n      } else if (value >= arr.p25 && value <= arr.p50) {\r\n        return <Percentis background={colors.green}>p25-p50</Percentis>;\r\n      } else if (value >= arr.p50 && value <= arr.p75) {\r\n        return <Percentis background={colors.green}>p50-p75</Percentis>;\r\n      } else if (value >= arr.p75 && value <= arr.p90) {\r\n        return <Percentis background={colors.green}>p75-p90</Percentis>;\r\n      } else if (value >= arr.p90 && value <= arr.p95) {\r\n        return <Percentis background={colors.green}>p90-p95</Percentis>;\r\n      } else if (value >= arr.p95 && value <= arr.p99) {\r\n        return <Percentis background={colors.white}>p95-p99</Percentis>;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <label>OCT Data</label>\r\n        <Break />\r\n        <label>\r\n          <strong>Peripapillary RNFL</strong>\r\n        </label>\r\n        <p>Average thickness (in microns)</p>\r\n        <Form>\r\n          <Row>\r\n            <div>\r\n              <Box>\r\n                <label>OD</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"peripapillary\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      peripapillary: {\r\n                        od: value,\r\n                        os: \"\",\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setPeripOdPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n              <Box>\r\n                <label>OS</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"peripapillary\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      peripapillary: { ...octData.peripapillary.od, os: value },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setPeripOsPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n            </div>\r\n            <PercentisCard>\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <label>Controls</label>\r\n                    {peripOdPerc ? peripOdPerc : <Percentis />}\r\n                  </td>\r\n                </tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr>\r\n                  <td>{peripOsPerc ? peripOsPerc : <Percentis />}</td>\r\n                </tr>\r\n              </table>\r\n            </PercentisCard>\r\n          </Row>\r\n          <Break />\r\n          <label>\r\n            <strong>Total macular thickness(ILM/RPE)</strong>\r\n          </label>\r\n          <p>Total macular thickness (in microns)</p>\r\n          <Row>\r\n            <div>\r\n              <Box>\r\n                <label>OD</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"total_macular\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      macular_thickness: {\r\n                        od: value,\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setTotalMacularOdPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n              <Box>\r\n                <label>OS</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"total_macular\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      macular_thickness: {\r\n                        os: value,\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setTotalMacularOsPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n            </div>\r\n            <PercentisCard>\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <label>Controls</label>\r\n                    {totalMacularOdPerc ? totalMacularOdPerc : <Percentis />}\r\n                  </td>\r\n                </tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr>\r\n                  <td>\r\n                    {totalMacularOsPerc ? totalMacularOsPerc : <Percentis />}\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </PercentisCard>\r\n          </Row>\r\n          <Break />\r\n          <label>\r\n            <strong>Macular volume</strong>\r\n          </label>\r\n          <p>Average volume (in mm3)</p>\r\n          <Row>\r\n            <div>\r\n              <Box>\r\n                <label>OD</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"macular_volume\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      macular_volume: {\r\n                        od: value,\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setMacularVolOdPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n              <Box>\r\n                <label>OS</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"macular_volume\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      macular_volume: {\r\n                        os: value,\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setMacularVolOsPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n            </div>\r\n            <PercentisCard>\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <label>Controls</label>\r\n                    {macularVolOdPerc ? macularVolOdPerc : <Percentis />}\r\n                  </td>\r\n                </tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr>\r\n                  <td>{macularVolOsPerc ? macularVolOsPerc : <Percentis />}</td>\r\n                </tr>\r\n              </table>\r\n            </PercentisCard>\r\n          </Row>\r\n          <Break />\r\n          <label>\r\n            <strong>GCL/IPL thickness</strong>\r\n          </label>\r\n          <p>Average thickness (in microns)</p>\r\n          <Row>\r\n            <div>\r\n              <Box>\r\n                <label>OD</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"GLC/IPL\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      gcl_ipl: {\r\n                        od: value,\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setGclIplOdPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n              <Box>\r\n                <label>OS</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"GLC/IPL\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      gcl_ipl: {\r\n                        os: value,\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setGclIplOsPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n            </div>\r\n            <PercentisCard>\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <label>Controls</label>\r\n                    {gclIplOdPerc ? gclIplOdPerc : <Percentis />}\r\n                  </td>\r\n                </tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr>\r\n                  <td> {gclIplOsPerc ? gclIplOsPerc : <Percentis />}</td>\r\n                </tr>\r\n              </table>\r\n            </PercentisCard>\r\n          </Row>\r\n          <Break />\r\n          <label>\r\n            <strong>GCL/IPL/RNFL thickness</strong>\r\n          </label>\r\n          <p>Average thickness (in microns)</p>\r\n          <Row>\r\n            <div>\r\n              <Box>\r\n                <label>OD</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"GLC/IPL/RNFL\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      gcl_ipl_rnfl: {\r\n                        od: parseInt(value),\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setGclIplRnflOdPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n              <Box>\r\n                <label>OS</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"GLC/IPL/RNFL\"\r\n                  onChange={(event) => {\r\n                    const value = event.target.value;\r\n                    setOctData({\r\n                      gcl_ipl_rnfl: {\r\n                        os: value,\r\n                      },\r\n                    });\r\n                  }}\r\n                  onInput={(event) =>\r\n                    setGclIplRnflOsPerc(\r\n                      handlePercentis(event.target.id, event.target.value)\r\n                    )\r\n                  }\r\n                />\r\n              </Box>\r\n            </div>\r\n            <PercentisCard>\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <label>Controls</label>\r\n                    {gclIplRnflOdPerc ? gclIplRnflOdPerc : <Percentis />}\r\n                  </td>\r\n                </tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr></tr>\r\n                <tr>\r\n                  <td>{gclIplRnflOsPerc ? gclIplRnflOsPerc : <Percentis />}</td>\r\n                </tr>\r\n              </table>\r\n            </PercentisCard>\r\n          </Row>\r\n        </Form>\r\n        <Break />\r\n      </Container>\r\n      <BrowserRouter>\r\n        <Link to=\"/results\">\r\n          <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n            Generate Results\r\n          </Button>\r\n        </Link>\r\n\r\n        <Route path=\"/results\" component={Results} />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OctData;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  margin: 0 10%;\r\n\r\n  @media (max-width:768px){\r\n    margin 0px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 500px;\r\n`;\r\n\r\nexport const Break = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const PercentisCard = styled.div`\r\n  margin-left: 20px;\r\n  align-self: center;\r\n\r\n  td {\r\n    text-align: center;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const Percentis = styled.div`\r\n  width: 90px;\r\n  height: 20px;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  label {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  p {\r\n    font-weight: 700;\r\n  }\r\n\r\n  input {\r\n    width: 60%;\r\n    margin-left: 15px;\r\n    padding: 10px;\r\n    border: 1px solid #d8d8d8;\r\n    border-radius: 5px;\r\n  }\r\n  input:focus {\r\n    outline-color: #3a86ff;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Form,\r\n  Box,\r\n  Break,\r\n  Row,\r\n  Percentis,\r\n  PercentisCard,\r\n} from \"./styles\";\r\nimport { CognitiveTestContext } from \"../../context/cognitiveTestContext\";\r\nimport { OctDataContext } from \"../../context/octDataContext\";\r\n\r\nfunction Results(props) {\r\n  const cognitiveTestData = React.useContext(CognitiveTestContext);\r\n  const octData = React.useContext(OctDataContext);\r\n\r\n  return (\r\n    <Container>\r\n      <label>Results / Summary:</label>\r\n      <Form>\r\n        <Box>\r\n          <label>Physician:</label>{\" \"}\r\n          <p>{cognitiveTestData.cognitiveTest.physician}</p>\r\n        </Box>\r\n        <Box>\r\n          <label>Patient:</label>{\" \"}\r\n          <p>{cognitiveTestData.cognitiveTest.patient}</p>\r\n        </Box>\r\n        <Box>\r\n          <label>ID number:</label>{\" \"}\r\n          <p>{cognitiveTestData.cognitiveTest.idNumber}</p>\r\n        </Box>\r\n        <Box>\r\n          <label>Sex:</label> <p>{cognitiveTestData.cognitiveTest.sex}</p>\r\n          <label> Age:</label> <p>{cognitiveTestData.cognitiveTest.age}</p>\r\n        </Box>\r\n        <Box>\r\n          <label>Diagnosis:</label>{\" \"}\r\n          <p>{cognitiveTestData.cognitiveTest.diagnosis}</p>\r\n        </Box>\r\n      </Form>\r\n      <Break />\r\n      <label>\r\n        <strong>Average Analysis Report</strong>\r\n      </label>\r\n      <Break />\r\n      <label>\r\n        <strong>Peripapillary RNFL (in microns)</strong>\r\n      </label>\r\n      <Row>\r\n        <div>\r\n          <Box>\r\n            <label>OD</label>\r\n            <p>{octData.octData.peripapillary.od}</p>\r\n          </Box>\r\n          <Box>\r\n            <label>OS</label>\r\n            <p>{octData.octData.peripapillary.os}</p>\r\n          </Box>\r\n        </div>\r\n        <PercentisCard>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <label>Controls</label>\r\n                <Percentis>{}</Percentis>\r\n              </td>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td>\r\n                <Percentis>p25-p50</Percentis>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </PercentisCard>\r\n      </Row>\r\n      <Break />\r\n      <label>\r\n        <strong>Total macular thickness (in microns)</strong>\r\n      </label>\r\n      <Row>\r\n        <div>\r\n          <Box>\r\n            <label>OD</label>\r\n            <p>{octData.octData.macular_thickness.od}</p>\r\n          </Box>\r\n          <Box>\r\n            <label>OS</label>\r\n            <p>{octData.octData.macular_thickness.os}</p>\r\n          </Box>\r\n        </div>\r\n        <PercentisCard>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <label>Controls</label>\r\n                <Percentis></Percentis>\r\n              </td>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td>\r\n                <Percentis></Percentis>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </PercentisCard>\r\n      </Row>\r\n      <Break />\r\n      <label>\r\n        <strong>Macular volume (in mm3)</strong>\r\n      </label>\r\n      <Row>\r\n        <div>\r\n          <Box>\r\n            <label>OD</label>\r\n            <p>{octData.octData.macular_volume.od}</p>\r\n          </Box>\r\n          <Box>\r\n            <label>OS</label>\r\n            <p>{octData.octData.macular_volume.os}</p>\r\n          </Box>\r\n        </div>\r\n        <PercentisCard>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <label>Controls</label>\r\n                <Percentis></Percentis>\r\n              </td>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td>\r\n                <Percentis></Percentis>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </PercentisCard>\r\n      </Row>\r\n      <Break />\r\n      <label>\r\n        <strong>GCL/IPL thickness (in microns)</strong>\r\n      </label>\r\n      <Row>\r\n        <div>\r\n          <Box>\r\n            <label>OD</label>\r\n            <p>{octData.octData.gcl_ipl.od}</p>\r\n          </Box>\r\n          <Box>\r\n            <label>OS</label>\r\n            <p>{octData.octData.gcl_ipl.os}</p>\r\n          </Box>\r\n        </div>\r\n        <PercentisCard>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <label>Controls</label>\r\n                <Percentis></Percentis>\r\n              </td>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td>\r\n                <Percentis></Percentis>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </PercentisCard>\r\n      </Row>\r\n      <Break />\r\n      <label>\r\n        <strong>GCL/IPL/RNFL (in microns)</strong>\r\n      </label>\r\n      <Row>\r\n        <div>\r\n          <Box>\r\n            <label>OD</label>\r\n            <p>{octData.octData.gcl_ipl_rnfl.od}</p>\r\n          </Box>\r\n          <Box>\r\n            <label>OS</label>\r\n            <p>{octData.octData.gcl_ipl_rnfl.os}</p>\r\n          </Box>\r\n        </div>\r\n        <PercentisCard>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n                <label>Controls</label>\r\n                <Percentis></Percentis>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </PercentisCard>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default Results;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  margin: 0 10%;\r\n\r\n  .select{\r\n    background-color: #fff;\r\n    margin-left: 15px;\r\n  }\r\n\r\n  .age-input{\r\n    margin-left: 25px;\r\n  }\r\n\r\n  .sex-input{\r\n    width: 150px;\r\n    margin-left: -10px;\r\n  }\r\n\r\n  @media (max-width:768px){\r\n    margin 0px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 500px;\r\n`;\r\n\r\nexport const Break = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  margin-top: 10px;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  input {\r\n    width: 60%;\r\n    margin-left: 15px;\r\n    padding: 10px;\r\n    border: 1px solid #d8d8d8;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  input:focus {\r\n    outline-color: #3a86ff;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Button, InputLabel } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Container, Form, Box, Break } from \"./styles\";\r\nimport { CognitiveTestContext } from \"../../context/cognitiveTestContext\";\r\nimport { Route, Link, BrowserRouter } from \"react-router-dom\";\r\nimport { OctData } from \"..\";\r\n\r\nfunction CognitiveTest({ history }) {\r\n  const { cognitiveTest, setCognitiveTest } =\r\n    React.useContext(CognitiveTestContext);\r\n  console.log(cognitiveTest);\r\n  return (\r\n    <Container>\r\n      <label>\r\n        <strong>Please, enter the patient data:</strong>\r\n      </label>\r\n      <Break/>\r\n      <Form>\r\n        <Box>\r\n          <label>Physician:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                physician: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>Patient:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                patient: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>ID number:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                idNumber: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>Sex:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"sex-input\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                sex: value,\r\n              });\r\n            }}\r\n          />\r\n          <div className=\"age-input\">\r\n            <label> Age:</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(event) => {\r\n                const value = event.target.value;\r\n                setCognitiveTest({\r\n                  age: value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </Box>\r\n        <Box>\r\n          <label>Diagnosis:</label>\r\n          <FormControl fullWidth variant=\"outlined\" className=\"select\">\r\n            <Select\r\n              value={cognitiveTest.diagnosis}\r\n              renderValue={(value) => `${value}`}\r\n              onChange={(event) => {\r\n                const value = event.target.value;\r\n                setCognitiveTest({\r\n                  diagnosis: value,\r\n                });\r\n              }}\r\n            >\r\n              <MenuItem value=\"Please select the Diagnosis:\" selected>\r\n                <em>Please select the Diagnosis:</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"Dementia\"}>Dementia</MenuItem>\r\n              <MenuItem value={\"Parkinson's disease\"}>\r\n                Parkinson's disease\r\n              </MenuItem>\r\n              <MenuItem value={\"Mild cognitive impairment\"}>\r\n                Mild cognitive impairment\r\n              </MenuItem>\r\n              <MenuItem value={\"Alzheimer's disease\"}>\r\n                Alzheimer's disease\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box>\r\n          <label>Cognitive test A:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                cognitiveTestA: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>Score value:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                scoreA: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>Cognitive test B:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                cognitiveTestB: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>Score value:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                scoreB: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>Ocular disease:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                ocularDisease: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <label>OCT model:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              const value = event.target.value;\r\n              setCognitiveTest({\r\n                octModel: value,\r\n              });\r\n            }}\r\n          />\r\n        </Box>\r\n      </Form>\r\n      <Break />\r\n\r\n      <BrowserRouter>\r\n        <Link to=\"/oct_data\">\r\n          <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n            OCT data\r\n          </Button>\r\n        </Link>\r\n\r\n        <Route path=\"/oct_data\" component={OctData} />\r\n      </BrowserRouter>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CognitiveTest;\r\n","import styled from \"styled-components\";\r\nimport colors from \"../../services/colors\";\r\n\r\nexport const Card = styled.div`\r\n  background-color: ${colors.primary};\r\n  justify-content: center;\r\n  text-align: center;\r\n  color: ${colors.white};\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  padding: 20px 0px;\r\n  margin: 0 auto;\r\n\r\n  a {\r\n    color: ${colors.white};\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Card } from \"./styles\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <Card>\r\n      <NavLink to=\"/\" end>\r\n        AlzhApp\r\n      </NavLink>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\";\r\nimport colors from \"../../services/colors\";\r\n\r\nexport const Homepage = styled.div`\r\n  height: 30vh;\r\n  margin: 0 auto;\r\n  background-color: ${colors.white};\r\n  justify-content: center;\r\n  text-align: center;\r\n  color: ${colors.black};\r\n  font-size: 28px;\r\n  font-weight: 500;\r\n  padding: 100px 0px;\r\n\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  margin-top: 15px;\r\n  font-size: 18px;\r\n`;\r\n","import React from \"react\";\r\nimport { Homepage, Subtitle } from \"./styles\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Homepage>\r\n      AlzhApp\r\n      <Subtitle>ALZHEIMER RISK CALCULATOR</Subtitle>\r\n      <p>Enter patient data information</p>\r\n    </Homepage>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\nimport colors from '../../services/colors';\r\n\r\nexport const Footerpage = styled.div`\r\n  width: 100%;\r\n  background-color: ${colors.white};\r\n  justify-content: center;\r\n  text-align: center;\r\n  color: ${colors.black};\r\n  padding: 20px 0px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  flex-direction: row;\r\n\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  color: ${colors.black};\r\n  display: flex;\r\n  text-decoration: none;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  label {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const Miniature = styled.div`\r\n  background-color: ${colors.primary};\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  color: ${colors.white};\r\n  display: flex;\r\n  place-items: center;\r\n  place-content: center;\r\n`;\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faEye, faPollH } from '@fortawesome/free-solid-svg-icons';\r\nimport { Footerpage, Miniature, StyledButton } from './styles';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Footerpage>\r\n      <NavLink to='cognitive_test'>\r\n        <StyledButton>\r\n          <Miniature>\r\n            <FontAwesomeIcon icon={faUser} size='lg' />\r\n          </Miniature>\r\n          <label>Patient Data</label>\r\n        </StyledButton>\r\n      </NavLink>\r\n\r\n      <NavLink to='oct_data'>\r\n        <StyledButton>\r\n          <Miniature>\r\n            <FontAwesomeIcon icon={faEye} size='lg' />\r\n          </Miniature>\r\n          <label>OCT data</label>\r\n        </StyledButton>\r\n      </NavLink>\r\n      <NavLink to='results'>\r\n        <StyledButton>\r\n          <Miniature>\r\n            <FontAwesomeIcon icon={faPollH} size='lg' />\r\n          </Miniature>\r\n          <label>Results Summary</label>\r\n        </StyledButton>\r\n      </NavLink>\r\n    </Footerpage>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { CognitiveProvider } from \"./context/cognitiveTestContext\";\r\nimport { OctProvider } from \"./context/octDataContext\";\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport {\r\n  CognitiveTest,\r\n  OctData,\r\n  Results,\r\n  Navbar,\r\n  Home,\r\n  Footer,\r\n} from \"./components\";\r\nimport \"./App.css\";\r\n\r\nfunction App({ history }) {\r\n  return (\r\n    <>\r\n      <CognitiveProvider>\r\n        <OctProvider>\r\n          <BrowserRouter>\r\n            <Navbar />\r\n            <Route path=\"/\" component={Home} />\r\n            <Route path=\"/oct_data\" component={OctData} />\r\n            <Route path=\"/results\" component={Results} />\r\n            <Route path=\"/cognitive_test\" component={CognitiveTest} />\r\n            <Footer />\r\n          </BrowserRouter>\r\n        </OctProvider>\r\n      </CognitiveProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}